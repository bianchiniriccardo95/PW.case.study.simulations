data("statin_db")
statin_db <- statin_db %>%
mutate(Albuminuria = Albuminuria_1)
confounder_unbalancing <- summary(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'reverse')
print(confounder_unbalancing)
statin_db_descriptives <- statin_db %>%
mutate(
Statin = factor(ifelse(statin_db$Statin == 1, 'Yes', 'No')),
Education = factor(ifelse(statin_db$Education == 0, '≤12 years', '>12 years')),
Gender = factor(ifelse(statin_db$Gender == 0, 'Male', 'Female')),
CVD = factor(ifelse(statin_db$CVD == 1, 'Yes', 'No')),
DM = factor(ifelse(statin_db$DM == 1, 'Yes', 'No')),
Smoking = factor(ifelse(statin_db$Smoking == 1, 'Yes', 'No')),
Albuminuria_1 = factor(ifelse(statin_db$Albuminuria_1 == 0, "<30", "≥30")),
Hypertension = factor(ifelse(statin_db$Hypertension == 0, 'No', 'Yes'))
)
statin_db_descriptives$Gender <- relevel(statin_db_descriptives$Gender, ref = 'Male')
statin_db_descriptives$Education <- ordered(statin_db_descriptives$Education, levels = c('≤12 years', '>12 years'))
statin_db_descriptives$Albuminuria_2 <- ordered(statin_db_descriptives$Albuminuria_2, levels = c("<30", "≥30"))
statin_db_descriptives$Smoking <- ordered(statin_db_descriptives$Smoking, levels = c('No', 'Yes'))
statin_db_descriptives$Statin <- ordered(statin_db_descriptives$Statin, levels = c('Yes','No'))
statin_db_descriptives$Hypertension <- ordered(statin_db_descriptives$Hypertension, levels = c('No','Yes'))
statin_db_descriptives %>%
select(Age,Gender,Education,CVD,DM,Hypertension,Smoking,Albuminuria_1,BMI, Statin, RFFT) %>%
gtsummary::tbl_summary(
by = Statin,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"
),
type = all_categorical() ~ "categorical",
digits = all_continuous() ~ 1,
label = list(
Statin ~ "Statin use",
Age ~ "Age (years)",
DM ~ "Diabetes Mellitus",
Albuminuria_1 ~ "Albuminuria (mg/24hr)",
CVD ~"History of vascular events",
BMI ~ "Body Mass Index (kg/m\u00B2)"
)
) %>% bold_labels() %>% modify_header(label = "") %>%
italicize_labels() %>%
modify_spanning_header(all_stat_cols() ~ "**Statin use**") %>%
modify_footnote(update = everything() ~ NA) %>%
add_p()
love_plot_un <- bal.tab(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
un = TRUE,
continuous = 'std',
binary = 'std',
abs = TRUE,
s.d.denom = 'pooled',
stats = c('mean.diffs', 'variance.ratios')
) %>% love.plot(thresholds = 0.1)
love_plot_un + theme(legend.position ='none')
crude_estimation <- lm(RFFT ~ Statin, data = statin_db)
summary(crude_estimation)
set.seed(42) #Set a random seed for reproducibility
methods <- c('ps','cbps','gbm')
weightit_list <- map(
methods,
~ weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = .x,
estimand = 'ATE',
stop.method = 'es.mean'
)
) %>% set_names(., nm = methods)
statin_db_ps <- statin_db[,c(1:26,32)] %>%
mutate(`Logistic Regression` = weightit_list$ps$ps,
`CBPS` = weightit_list$cbps$ps,
`GBM` = weightit_list$gbm$ps)
statin_db_long <- pivot_longer(statin_db_ps, cols = c(28:ncol(statin_db_ps)), names_to = 'method', values_to = 'ps_value')
ggplot(data = statin_db_long, aes(x = ps_value, y = after_stat(density), fill = Statin)) +
geom_density(alpha = 0.5) +
theme_bw() +
facet_wrap(~ method)+
labs(x = 'Propensity score', y = 'Density')
weightit_trimming_cutoff <- weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'ps',
estimand = 'ATE' #IPW
)
statin_db_trimming_cutoffs = statin_db %>%
mutate(wt_0.9 = trim(weightit_trimming_cutoff$weights, at = 0.9, treat = statin_db$Statin),
wt_0.95 = trim(weightit_trimming_cutoff$weights, at = 0.95, treat = statin_db$Statin),
wt_0.99 = trim(weightit_trimming_cutoff$weights, at = .99, treat = statin_db$Statin),
wt = weightit_trimming_cutoff$weights)
trimming_cutoffs_bals <- map(
c('wt_0.9','wt_0.95','wt_0.99'),
~ bal.tab(x = statin_db_trimming_cutoffs[,c('Age','Gender','Education','CVD','Smoking','DM', 'Hypertension', 'BMI', 'Albuminuria')], treat = statin_db_trimming_cutoffs$Statin, weights = statin_db_trimming_cutoffs[,.x], un = TRUE, abs = TRUE, s.d.denom = 'pooled', stats = c('mean.diffs', 'variance.ratios'))) %>% set_names(., nm = c('Trimming at q = 0.9', 'Trimming at q = 0.95', 'Trimming at q = 0.99'))
love_plots_trimming_cutoffs <- map(
trimming_cutoffs_bals,
~ {love.plot(.x, thresholds = 0.1) + labs(title = '')}
)
ggarrange(plotlist = love_plots_trimming_cutoffs,common.legend = T, labels = names(trimming_cutoffs_bals))
#IPW with trimming at q=0.9
svy_design <- svydesign(
ids = ~ 1,
weights = ~ wt_0.9,
data = statin_db_trimming_cutoffs
)
out_model_statin <- svyglm(
RFFT ~ Statin,
design = svy_design,
family = gaussian()
)
summary(out_model_statin)
#IPW with trimming at q=0.95
svy_design_0.95 <- svydesign(
ids = ~ 1,
weights = ~ wt_0.95,
data = statin_db_trimming_cutoffs
)
out_model_statin_0.95 <- svyglm(
RFFT ~ Statin,
design = svy_design_0.95,
family = gaussian()
)
summary(out_model_statin_0.95)
#IPW with trimming at q=0.99
svy_design_0.99 <- svydesign(
ids = ~ 1,
weights = ~ wt_0.99,
data = statin_db_trimming_cutoffs
)
out_model_statin_0.99 <- svyglm(
RFFT ~ Statin,
design = svy_design_0.99,
family = gaussian()
)
summary(out_model_statin_0.99)
#OW weights calculation
OW_trimming_cutoff <- weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'ps',
estimand = 'ATO' #OW
)
statin_db_overlap_wt <- statin_db %>%
mutate(overlap_wt = OW_trimming_cutoff$weights)
OW_bal_tab <- bal.tab(x = statin_db_overlap_wt[,c('Age','Gender','Education','CVD','Smoking','DM', 'Hypertension', 'BMI', 'Albuminuria')], treat = statin_db_overlap_wt$Statin, weights = statin_db_overlap_wt[,'overlap_wt'], un = TRUE, abs = TRUE, s.d.denom = 'pooled', stats = c('mean.diffs', 'variance.ratios'))
love_plot_ow <- love.plot(OW_bal_tab, thresholds = 0.1)
love_plot_ow
final_love_plot_list <- c(love_plots_trimming_cutoffs, list(love_plot_ow)) %>%
set_names(., nm = c(names(love_plots_trimming_cutoffs), "OW"))
ggarrange(plotlist = final_love_plot_list,common.legend = T, labels = names(final_love_plot_list))
svy_design_overlap <- svydesign(
ids = ~1,
weights = ~ overlap_wt,
data = statin_db_overlap_wt
)
out_model_overlap <- svyglm(
RFFT ~ Statin,
design = svy_design_overlap,
family = gaussian()
)
summary(out_model_overlap)
(map_df(list(crude_estimation, out_model_statin, out_model_statin_0.95,out_model_statin_0.99, out_model_overlap), ~{data.frame(summary(.x)$coefficients[2,1], confint(.x)[2,1], confint(.x)[2,2], summary(.x)$coefficients[2,4])}) %>% `colnames<-`(., c('B', 'LOWER 95% CI', 'UPPER 95% CI', 'p-value')) %>%
`rownames<-`(., c('Crude', 'IPW Trimming 0.9', 'IPW Trimming 0.95', 'IPW Trimming 0.99', 'OW')))
statin_db <- statin_db %>%
mutate(Years_corrected = ifelse(statin_db$Years == -1, 0, statin_db$Years))
statin_db_trimming_cutoffs <- statin_db_trimming_cutoffs %>%
mutate(Years_corrected = ifelse(statin_db_trimming_cutoffs$Years == -1, 0, statin_db_trimming_cutoffs$Years))
statin_db_overlap_wt <- statin_db_overlap_wt %>%
mutate(Years_corrected = ifelse(statin_db_overlap_wt$Years == -1, 0, statin_db_overlap_wt$Years))
crude_estimation_years <- lm(RFFT ~ Years_corrected, data = statin_db)
summary(crude_estimation_years)
#IPW with trimming at q=0.9
svy_design <- svydesign(
ids = ~ 1,
weights = ~ wt_0.9,
data = statin_db_trimming_cutoffs
)
out_model_statin_years <- svyglm(
RFFT ~ Years_corrected,
design = svy_design,
family = gaussian()
)
summary(out_model_statin_years)
#IPW with trimming at q=0.95
svy_design <- svydesign(
ids = ~ 1,
weights = ~ wt_0.95,
data = statin_db_trimming_cutoffs
)
out_model_statin_0.95_years <- svyglm(
RFFT ~ Years_corrected,
design = svy_design,
family = gaussian()
)
summary(out_model_statin_0.95_years)
#IPW with trimming at q=0.99
svy_design <- svydesign(
ids = ~ 1,
weights = ~ wt_0.99,
data = statin_db_trimming_cutoffs
)
out_model_statin_0.99_years <- svyglm(
RFFT ~ Years_corrected,
design = svy_design,
family = gaussian()
)
summary(out_model_statin_0.99_years)
svy_design <- svydesign(
ids = ~ 1,
weights = ~ overlap_wt,
data = statin_db_overlap_wt
)
out_model_statin_overlap_years <- svyglm(
RFFT ~ Years_corrected,
design = svy_design,
family = gaussian()
)
summary(out_model_statin_overlap_years)
(map_df(list(crude_estimation_years, out_model_statin_years, out_model_statin_0.95_years,out_model_statin_0.99_years, out_model_statin_overlap_years), ~{data.frame(summary(.x)$coefficients[2,1], confint(.x)[2,1], confint(.x)[2,2], summary(.x)$coefficients[2,4])}) %>% `colnames<-`(., c('B', 'LOWER 95% CI', 'UPPER 95% CI', 'p-value')) %>%
`rownames<-`(., c('Crude', 'IPW Trimming 0.9', 'IPW Trimming 0.95', 'IPW Trimming 0.99', 'OW')))
library(ebal)
set.seed(42)
ebal_weights <- weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'ebal',
estimand = 'ATE'
)
statin_db_ebal_wt <- statin_db %>%
mutate(ebal_wt = ebal_weights$weights)
ebal_tab <- bal.tab(x = statin_db_ebal_wt[,c('Age','Gender','Education','CVD','Smoking','DM', 'Hypertension', 'BMI', 'Albuminuria')], treat = statin_db_ebal_wt$Statin, weights = statin_db_ebal_wt[,'ebal_wt'], un = TRUE, abs = TRUE, s.d.denom = 'pooled', stats = c('mean.diffs', 'variance.ratios'))
love_plot_ebal <- love.plot(ebal_tab, thresholds = 0.1)
love_plot_ebal
cat('OVERLAP WEIGHTING')
summary(OW_trimming_cutoff)
cat('\nENTROPY BALANCING')
summary(ebal_weights)
cat('\nIPW WEIGHTING')
summary(weightit_list$ps)
svy_design_ebal <- svydesign(
ids = ~1,
weights = ~ ebal_wt,
data = statin_db_ebal_wt
)
out_model_ebal <- svyglm(
RFFT ~ Statin,
design = svy_design_ebal,
family = gaussian()
)
summary(out_model_ebal)
(map_df(list(crude_estimation, out_model_statin, out_model_statin_0.95,out_model_statin_0.99, out_model_overlap, out_), ~{data.frame(summary(.x)$coefficients[2,1], confint(.x)[2,1], confint(.x)[2,2], summary(.x)$coefficients[2,4])}) %>% `colnames<-`(., c('B', 'LOWER 95% CI', 'UPPER 95% CI', 'p-value')) %>%
`rownames<-`(., c('Crude', 'IPW Trimming 0.9', 'IPW Trimming 0.95', 'IPW Trimming 0.99', 'OW')))
(map_df(list(crude_estimation, out_model_statin, out_model_statin_0.95,out_model_statin_0.99, out_model_overlap, out_model_ebal), ~{data.frame(summary(.x)$coefficients[2,1], confint(.x)[2,1], confint(.x)[2,2], summary(.x)$coefficients[2,4])}) %>% `colnames<-`(., c('B', 'LOWER 95% CI', 'UPPER 95% CI', 'p-value')) %>%
`rownames<-`(., c('Crude', 'IPW Trimming 0.9', 'IPW Trimming 0.95', 'IPW Trimming 0.99', 'OW')))
(map_df(list(crude_estimation, out_model_statin, out_model_statin_0.95,out_model_statin_0.99, out_model_overlap, out_model_ebal), ~{data.frame(summary(.x)$coefficients[2,1], confint(.x)[2,1], confint(.x)[2,2], summary(.x)$coefficients[2,4])}) %>% `colnames<-`(., c('B', 'LOWER 95% CI', 'UPPER 95% CI', 'p-value')) %>%
`rownames<-`(., c('Crude', 'IPW Trimming 0.9', 'IPW Trimming 0.95', 'IPW Trimming 0.99', 'OW', 'EBAL')))
ebal_weights <- weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'ebal',
estimand = 'ATE'
)
library(PW.case.study.simulations)
library(Hmisc)
library(gtsummary)
#The dataset is available in the PW.case.study.simulations package
data("statin_db")
statin_db <- statin_db %>%
mutate(Albuminuria = Albuminuria_1)
confounder_unbalancing <- summary(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'reverse')
print(confounder_unbalancing)
statin_db_descriptives <- statin_db %>%
mutate(
Statin = factor(ifelse(statin_db$Statin == 1, 'Yes', 'No')),
Education = factor(ifelse(statin_db$Education == 0, '≤12 years', '>12 years')),
Gender = factor(ifelse(statin_db$Gender == 0, 'Male', 'Female')),
CVD = factor(ifelse(statin_db$CVD == 1, 'Yes', 'No')),
DM = factor(ifelse(statin_db$DM == 1, 'Yes', 'No')),
Smoking = factor(ifelse(statin_db$Smoking == 1, 'Yes', 'No')),
Albuminuria_1 = factor(ifelse(statin_db$Albuminuria_1 == 0, "<30", "≥30")),
Hypertension = factor(ifelse(statin_db$Hypertension == 0, 'No', 'Yes'))
)
statin_db_descriptives$Gender <- relevel(statin_db_descriptives$Gender, ref = 'Male')
statin_db_descriptives$Education <- ordered(statin_db_descriptives$Education, levels = c('≤12 years', '>12 years'))
statin_db_descriptives$Albuminuria_2 <- ordered(statin_db_descriptives$Albuminuria_2, levels = c("<30", "≥30"))
statin_db_descriptives$Smoking <- ordered(statin_db_descriptives$Smoking, levels = c('No', 'Yes'))
statin_db_descriptives$Statin <- ordered(statin_db_descriptives$Statin, levels = c('Yes','No'))
statin_db_descriptives$Hypertension <- ordered(statin_db_descriptives$Hypertension, levels = c('No','Yes'))
statin_db_descriptives %>%
select(Age,Gender,Education,CVD,DM,Hypertension,Smoking,Albuminuria_1,BMI, Statin, RFFT) %>%
gtsummary::tbl_summary(
by = Statin,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"
),
type = all_categorical() ~ "categorical",
digits = all_continuous() ~ 1,
label = list(
Statin ~ "Statin use",
Age ~ "Age (years)",
DM ~ "Diabetes Mellitus",
Albuminuria_1 ~ "Albuminuria (mg/24hr)",
CVD ~"History of vascular events",
BMI ~ "Body Mass Index (kg/m\u00B2)"
)
) %>% bold_labels() %>% modify_header(label = "") %>%
italicize_labels() %>%
modify_spanning_header(all_stat_cols() ~ "**Statin use**") %>%
modify_footnote(update = everything() ~ NA) %>%
add_p()
love_plot_un <- bal.tab(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
un = TRUE,
continuous = 'std',
binary = 'std',
abs = TRUE,
s.d.denom = 'pooled',
stats = c('mean.diffs', 'variance.ratios')
) %>% love.plot(thresholds = 0.1)
love_plot_un + theme(legend.position ='none')
crude_estimation <- lm(RFFT ~ Statin, data = statin_db)
summary(crude_estimation)
set.seed(42) #Set a random seed for reproducibility
methods <- c('ps','cbps','gbm')
weightit_list <- map(
methods,
~ weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = .x,
estimand = 'ATE',
stop.method = 'es.mean'
)
) %>% set_names(., nm = methods)
statin_db_ps <- statin_db[,c(1:26,32)] %>%
mutate(`Logistic Regression` = weightit_list$ps$ps,
`CBPS` = weightit_list$cbps$ps,
`GBM` = weightit_list$gbm$ps)
statin_db_long <- pivot_longer(statin_db_ps, cols = c(28:ncol(statin_db_ps)), names_to = 'method', values_to = 'ps_value')
ggplot(data = statin_db_long, aes(x = ps_value, y = after_stat(density), fill = Statin)) +
geom_density(alpha = 0.5) +
theme_bw() +
facet_wrap(~ method)+
labs(x = 'Propensity score', y = 'Density')
weightit_trimming_cutoff <- weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'ps',
estimand = 'ATE' #IPW
)
statin_db_trimming_cutoffs = statin_db %>%
mutate(wt_0.9 = trim(weightit_trimming_cutoff$weights, at = 0.9, treat = statin_db$Statin),
wt_0.95 = trim(weightit_trimming_cutoff$weights, at = 0.95, treat = statin_db$Statin),
wt_0.99 = trim(weightit_trimming_cutoff$weights, at = .99, treat = statin_db$Statin),
wt = weightit_trimming_cutoff$weights)
trimming_cutoffs_bals <- map(
c('wt_0.9','wt_0.95','wt_0.99'),
~ bal.tab(x = statin_db_trimming_cutoffs[,c('Age','Gender','Education','CVD','Smoking','DM', 'Hypertension', 'BMI', 'Albuminuria')], treat = statin_db_trimming_cutoffs$Statin, weights = statin_db_trimming_cutoffs[,.x], un = TRUE, abs = TRUE, s.d.denom = 'pooled', stats = c('mean.diffs', 'variance.ratios'))) %>% set_names(., nm = c('Trimming at q = 0.9', 'Trimming at q = 0.95', 'Trimming at q = 0.99'))
love_plots_trimming_cutoffs <- map(
trimming_cutoffs_bals,
~ {love.plot(.x, thresholds = 0.1) + labs(title = '')}
)
ggarrange(plotlist = love_plots_trimming_cutoffs,common.legend = T, labels = names(trimming_cutoffs_bals))
#IPW with trimming at q=0.9
svy_design <- svydesign(
ids = ~ 1,
weights = ~ wt_0.9,
data = statin_db_trimming_cutoffs
)
out_model_statin <- svyglm(
RFFT ~ Statin,
design = svy_design,
family = gaussian()
)
summary(out_model_statin)
#IPW with trimming at q=0.95
svy_design_0.95 <- svydesign(
ids = ~ 1,
weights = ~ wt_0.95,
data = statin_db_trimming_cutoffs
)
out_model_statin_0.95 <- svyglm(
RFFT ~ Statin,
design = svy_design_0.95,
family = gaussian()
)
summary(out_model_statin_0.95)
#IPW with trimming at q=0.99
svy_design_0.99 <- svydesign(
ids = ~ 1,
weights = ~ wt_0.99,
data = statin_db_trimming_cutoffs
)
out_model_statin_0.99 <- svyglm(
RFFT ~ Statin,
design = svy_design_0.99,
family = gaussian()
)
summary(out_model_statin_0.99)
#OW weights calculation
OW_trimming_cutoff <- weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'ps',
estimand = 'ATO' #OW
)
statin_db_overlap_wt <- statin_db %>%
mutate(overlap_wt = OW_trimming_cutoff$weights)
OW_bal_tab <- bal.tab(x = statin_db_overlap_wt[,c('Age','Gender','Education','CVD','Smoking','DM', 'Hypertension', 'BMI', 'Albuminuria')], treat = statin_db_overlap_wt$Statin, weights = statin_db_overlap_wt[,'overlap_wt'], un = TRUE, abs = TRUE, s.d.denom = 'pooled', stats = c('mean.diffs', 'variance.ratios'))
love_plot_ow <- love.plot(OW_bal_tab, thresholds = 0.1)
love_plot_ow
final_love_plot_list <- c(love_plots_trimming_cutoffs, list(love_plot_ow)) %>%
set_names(., nm = c(names(love_plots_trimming_cutoffs), "OW"))
ggarrange(plotlist = final_love_plot_list,common.legend = T, labels = names(final_love_plot_list))
svy_design_overlap <- svydesign(
ids = ~1,
weights = ~ overlap_wt,
data = statin_db_overlap_wt
)
out_model_overlap <- svyglm(
RFFT ~ Statin,
design = svy_design_overlap,
family = gaussian()
)
summary(out_model_overlap)
(map_df(list(crude_estimation, out_model_statin, out_model_statin_0.95,out_model_statin_0.99, out_model_overlap), ~{data.frame(summary(.x)$coefficients[2,1], confint(.x)[2,1], confint(.x)[2,2], summary(.x)$coefficients[2,4])}) %>% `colnames<-`(., c('B', 'LOWER 95% CI', 'UPPER 95% CI', 'p-value')) %>%
`rownames<-`(., c('Crude', 'IPW Trimming 0.9', 'IPW Trimming 0.95', 'IPW Trimming 0.99', 'OW')))
statin_db <- statin_db %>%
mutate(Years_corrected = ifelse(statin_db$Years == -1, 0, statin_db$Years))
statin_db_trimming_cutoffs <- statin_db_trimming_cutoffs %>%
mutate(Years_corrected = ifelse(statin_db_trimming_cutoffs$Years == -1, 0, statin_db_trimming_cutoffs$Years))
statin_db_overlap_wt <- statin_db_overlap_wt %>%
mutate(Years_corrected = ifelse(statin_db_overlap_wt$Years == -1, 0, statin_db_overlap_wt$Years))
crude_estimation_years <- lm(RFFT ~ Years_corrected, data = statin_db)
summary(crude_estimation_years)
#IPW with trimming at q=0.9
svy_design <- svydesign(
ids = ~ 1,
weights = ~ wt_0.9,
data = statin_db_trimming_cutoffs
)
out_model_statin_years <- svyglm(
RFFT ~ Years_corrected,
design = svy_design,
family = gaussian()
)
summary(out_model_statin_years)
#IPW with trimming at q=0.95
svy_design <- svydesign(
ids = ~ 1,
weights = ~ wt_0.95,
data = statin_db_trimming_cutoffs
)
out_model_statin_0.95_years <- svyglm(
RFFT ~ Years_corrected,
design = svy_design,
family = gaussian()
)
summary(out_model_statin_0.95_years)
#IPW with trimming at q=0.99
svy_design <- svydesign(
ids = ~ 1,
weights = ~ wt_0.99,
data = statin_db_trimming_cutoffs
)
out_model_statin_0.99_years <- svyglm(
RFFT ~ Years_corrected,
design = svy_design,
family = gaussian()
)
summary(out_model_statin_0.99_years)
svy_design <- svydesign(
ids = ~ 1,
weights = ~ overlap_wt,
data = statin_db_overlap_wt
)
out_model_statin_overlap_years <- svyglm(
RFFT ~ Years_corrected,
design = svy_design,
family = gaussian()
)
summary(out_model_statin_overlap_years)
(map_df(list(crude_estimation_years, out_model_statin_years, out_model_statin_0.95_years,out_model_statin_0.99_years, out_model_statin_overlap_years), ~{data.frame(summary(.x)$coefficients[2,1], confint(.x)[2,1], confint(.x)[2,2], summary(.x)$coefficients[2,4])}) %>% `colnames<-`(., c('B', 'LOWER 95% CI', 'UPPER 95% CI', 'p-value')) %>%
`rownames<-`(., c('Crude', 'IPW Trimming 0.9', 'IPW Trimming 0.95', 'IPW Trimming 0.99', 'OW')))
library(ebal)
set.seed(42)
ebal_weights <- weightit(
Statin ~ Age + Gender + Education + CVD + Smoking + DM + Hypertension + BMI + Albuminuria,
data = statin_db,
method = 'ebal',
estimand = 'ATE'
)
statin_db_ebal_wt <- statin_db %>%
mutate(ebal_wt = ebal_weights$weights)
ebal_tab <- bal.tab(x = statin_db_ebal_wt[,c('Age','Gender','Education','CVD','Smoking','DM', 'Hypertension', 'BMI', 'Albuminuria')], treat = statin_db_ebal_wt$Statin, weights = statin_db_ebal_wt[,'ebal_wt'], un = TRUE, abs = TRUE, s.d.denom = 'pooled', stats = c('mean.diffs', 'variance.ratios'))
love_plot_ebal <- love.plot(ebal_tab, thresholds = 0.1)
love_plot_ebal
ebal_weights
library(PW.case.study.simulations)
devtools::install_github("bianchiniriccardo95/PW.case.study.simulations")
library(PW.case.study.simulations)
devtools::install_github("bianchiniriccardo95/PW.case.study.simulations")
library(PW.case.study.simulations)
library(PW.case.study.simulations)
